{"version":3,"sources":["Components/card-list/card-list.styles.jsx","Components/card/card.styles.jsx","Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.styles.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardListContainer","styled","div","CardWrapper","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","i","InputWrapper","input","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","className","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAEaA,EAAoBC,IAAOC,IAAV,gKCAjBC,EAAcF,IAAOC,IAAV,0X,OCCXE,EAAO,SAACC,GAAD,OAClB,eAACF,EAAD,WACE,qBACEG,IAAI,UACJC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,YCNTC,EAAW,SAACP,GACvB,OACE,cAACL,EAAD,UACGK,EAAMQ,SAASC,KAAI,SAACN,EAASO,GAAV,OAClB,cAAC,EAAD,CAAcP,QAASA,GAAZO,SCNNC,EAAef,IAAOgB,MAAV,6KCCZC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,cAACJ,EAAD,CACEK,KAAK,SACLF,YAAaA,EACbG,SAAUF,KCoCCG,E,kDArCb,WAAYlB,GAAQ,IAAD,8BACjB,gBAEKmB,MAAQ,CACXX,SAAU,GACVY,YAAa,IALE,E,qDASnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAElB,SAAUiB,S,0BAG/C,SAAaE,GACXC,KAAKF,SAAS,CAAEN,YAAaO,EAAEE,OAAOC,U,oBAGxC,WAAU,IAAD,EAC2BF,KAAKT,MAA/BX,EADD,EACCA,SAAUY,EADX,EACWA,YACZW,EAAmBvB,EAASwB,QAAO,SAAC7B,GAAD,OACvCA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAKE,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACErB,YAAY,kBACZC,aAAca,KAAKb,eAErB,cAAC,EAAD,CAAUP,SAAUuB,W,GAhCVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.29671c2f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CardListContainer = styled.div`\r\n  width: 85vw;\r\n  margin: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 25%);\r\n  grid-gap: 20px;\r\n  margin-left: 105px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #95dada;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  padding: 25px;\r\n  cursor: pointer;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  backface-visibility: hidden;\r\n  transform: translateZ(0);\r\n  transition: transform 0.25s ease-out;\r\n  :hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { CardWrapper } from './card.styles';\r\n\r\nexport const Card = (props) => (\r\n  <CardWrapper>\r\n    <img\r\n      alt='monster'\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n  </CardWrapper>\r\n);\r\n","import React from 'react';\r\nimport { CardListContainer } from './card-list.styles';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <CardListContainer>\r\n      {props.monsters.map((monster, i) => (\r\n        <Card key={i} monster={monster} />\r\n      ))}\r\n    </CardListContainer>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const InputWrapper = styled.input`\r\n  -webkit-appearance: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 10px;\r\n  width: 150px;\r\n  line-height: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n","import React from 'react';\r\nimport { InputWrapper } from './search-box.styles';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <InputWrapper\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React from 'react';\nimport './App.css';\nimport { CardList } from './Components/card-list/card-list.component';\nimport { SearchBox } from './Components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search Monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}